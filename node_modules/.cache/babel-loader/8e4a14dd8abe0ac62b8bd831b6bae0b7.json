{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/WebCV/cv/src/component/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./Project.css\";\nimport ProjectItem from './Project/ProjectItem';\nimport { db } from \"../firebase/firebase\";\nimport { useEffect } from 'react';\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Projects = () => {\n  _s();\n\n  const [item, setItem] = useState([]); //Retrieve user data from the database \n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      await getDocs(collection(db, \"projects\")).then(querySnapshot => {\n        querySnapshot.docs.map(doc => setItem(item => [...item, doc.data()]));\n      });\n    };\n\n    fetchProjects(); // eslint-disable-next-line\n  }, []);\n  const [currentProject, setCurrentProject] = useState(0);\n  const length = item.reverse().length;\n\n  const nextSlide = () => {\n    setCurrentProject(currentProject === length - 1 ? 0 : currentProject + 1);\n    item.reverse().map(i => console.log(i));\n  };\n\n  const prevSlide = () => {\n    setCurrentProject(currentProject === 0 ? length - 1 : currentProject - 1);\n  };\n\n  if (!Array.isArray(item.reverse()) || item.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"projects\",\n    className: \"comp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"{$projects}\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"slider\",\n      children: [/*#__PURE__*/_jsxDEV(FaArrowLeft, {\n        className: \"left-arrow\",\n        onClick: prevSlide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaArrowRight, {\n        className: \"right-arrow\",\n        onClick: nextSlide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), item.map((i, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: index === currentProject ? \"active slide\" : \"slide\",\n          children: index === currentProject && /*#__PURE__*/_jsxDEV(ProjectItem, {\n            item: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 18\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"[\", currentProject + 1, \"/\", item.length, \"]\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Projects, \"WIhSCglR6ujjyxQ/fhP0iOb4C+s=\");\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/daniel/Desktop/WebCV/cv/src/component/Projects.js"],"names":["React","useState","ProjectItem","db","useEffect","collection","getDocs","FaArrowLeft","FaArrowRight","Projects","item","setItem","fetchProjects","then","querySnapshot","docs","map","doc","data","currentProject","setCurrentProject","length","reverse","nextSlide","i","console","log","prevSlide","Array","isArray","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport \"./Project.css\"\nimport ProjectItem from './Project/ProjectItem'\nimport {db} from \"../firebase/firebase\"\nimport { useEffect } from 'react'\nimport { collection, getDocs } from \"firebase/firestore\";\nimport {FaArrowLeft,FaArrowRight} from 'react-icons/fa'\n\nexport const Projects = () => {\n  const [item, setItem] = useState([]);\n\n  //Retrieve user data from the database \n  useEffect(() =>{\n    const fetchProjects = async () => {\n      await getDocs(collection(db, \"projects\"))\n      .then(querySnapshot => {\n        querySnapshot.docs\n          .map(doc => \n            setItem(item => [...item, doc.data()])\n          );\n      });\n      \n    }\n\n    fetchProjects();\n// eslint-disable-next-line\n  },[])\n\n  const [currentProject, setCurrentProject] = useState(0);\n  const length = item.reverse().length;\n\n  const nextSlide = () => {\n    setCurrentProject(currentProject === length-1 ? 0 : currentProject+1);\n    item.reverse().map(i=>console.log(i));\n  }\n\n  const prevSlide = () => {\n    setCurrentProject(currentProject === 0 ? length-1 : currentProject-1);\n  }\n\n  if(!Array.isArray(item.reverse()) || item.length === 0){\n    return null;\n  }\n\n\n  return (\n    <div id=\"projects\" className='comp'>\n      <h1>&#123;$projects&#125;</h1>\n      <section className='slider'>\n        <FaArrowLeft className='left-arrow' onClick={prevSlide}/>\n        <FaArrowRight className='right-arrow' onClick={nextSlide}/>\n        {item.map((i, index) =>\n          {\n            return (\n              <div className={index === currentProject ? \"active slide\":\"slide\"} key={index}>\n                {index === currentProject &&\n                (<ProjectItem item = {i}/>)}    \n              </div>\n            )\n          } )}\n      </section>\n      <p>[{currentProject+1}/{item.length}]</p>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}