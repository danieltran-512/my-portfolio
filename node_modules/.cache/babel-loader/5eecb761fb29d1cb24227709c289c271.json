{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/WebCV/cv/src/component/elements/useBoop.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { animated, useSpring } from 'react-spring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useBoop = _ref => {\n  _s();\n\n  let {\n    x = 0,\n    y = 0,\n    scale = 1,\n    rotation = 0,\n    timing = 150,\n    children\n  } = _ref;\n  const [isBooped, setIsBooped] = React.useState(false);\n  const style = useSpring({\n    display: 'inline-block',\n    backfaceVisibility: 'hidden',\n    transform: isBooped ? `rotate(${rotation}deg)` : `rotate(0deg)`,\n    transform: isBooped ? `translate(${x}px, ${y}px)\n           rotate(${rotation}deg)\n           scale(${scale})` : `translate(0px, 0px)\n           rotate(0deg)\n           scale(1)`,\n    config: {\n      tension: 300,\n      friction: 10\n    }\n  });\n  React.useEffect(() => {\n    if (!isBooped) {\n      return;\n    }\n\n    const timeoutId = window.setTimeout(() => {\n      setIsBooped(false);\n    }, timing);\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isBooped, timing]);\n\n  const trigger = () => {\n    setIsBooped(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(animated.span, {\n    onMouseEnter: trigger,\n    style: style,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(useBoop, \"2pu0yvuAxEEy99Z1Y1b97pbBlGc=\", false, function () {\n  return [useSpring];\n});\n\nexport default useBoop;","map":{"version":3,"sources":["/Users/daniel/Desktop/WebCV/cv/src/component/elements/useBoop.js"],"names":["React","animated","useSpring","useBoop","x","y","scale","rotation","timing","children","isBooped","setIsBooped","useState","style","display","backfaceVisibility","transform","config","tension","friction","useEffect","timeoutId","window","setTimeout","clearTimeout","trigger"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,cAApC;;;AAEA,MAAMC,OAAO,GAAG,QAG0C;AAAA;;AAAA,MAHzC;AACbC,IAAAA,CAAC,GAAG,CADS;AAEbC,IAAAA,CAAC,GAAG,CAFS;AAGbC,IAAAA,KAAK,GAAG,CAHK;AAGFC,IAAAA,QAAQ,GAAG,CAHT;AAGYC,IAAAA,MAAM,GAAG,GAHrB;AAG0BC,IAAAA;AAH1B,GAGyC;AACtD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,KAAK,CAACY,QAAN,CAAe,KAAf,CAAhC;AAEA,QAAMC,KAAK,GAAGX,SAAS,CAAC;AACpBY,IAAAA,OAAO,EAAE,cADW;AAEpBC,IAAAA,kBAAkB,EAAE,QAFA;AAGpBC,IAAAA,SAAS,EAAEN,QAAQ,GAChB,UAASH,QAAS,MADF,GAEhB,cALiB;AAMpBS,IAAAA,SAAS,EAAEN,QAAQ,GAChB,aAAYN,CAAE,OAAMC,CAAE;AACjC,oBAAoBE,QAAS;AAC7B,mBAAmBD,KAAM,GAHE,GAIhB;AACX;AACA,oBAZ4B;AAapBW,IAAAA,MAAM,EAAE;AACJC,MAAAA,OAAO,EAAE,GADL;AAEJC,MAAAA,QAAQ,EAAE;AAFN;AAbY,GAAD,CAAvB;AAmBAnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AAClB,QAAI,CAACV,QAAL,EAAe;AACX;AACD;;AAEH,UAAMW,SAAS,GAAGC,MAAM,CAACC,UAAP,CAAkB,MAAM;AACtCZ,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KAFiB,EAEfH,MAFe,CAAlB;AAIA,WAAO,MAAM;AACTc,MAAAA,MAAM,CAACE,YAAP,CAAoBH,SAApB;AACH,KAFD;AAGH,GAZD,EAYG,CAACX,QAAD,EAAWF,MAAX,CAZH;;AAcA,QAAMiB,OAAO,GAAG,MAAM;AAClBd,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,sBACI,QAAC,QAAD,CAAU,IAAV;AAAe,IAAA,YAAY,EAAEc,OAA7B;AAAsC,IAAA,KAAK,EAAEZ,KAA7C;AAAA,cACCJ;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhDD;;GAAMN,O;UAMYD,S;;;AA4ClB,eAAeC,OAAf","sourcesContent":["import React from 'react'\nimport { animated, useSpring } from 'react-spring';\n\nconst useBoop = ({\n    x = 0,\n    y = 0,\n    scale = 1, rotation = 0, timing = 150, children }) => {\n    const [isBooped, setIsBooped] = React.useState(false);\n\n    const style = useSpring({\n        display: 'inline-block',\n        backfaceVisibility: 'hidden',\n        transform: isBooped\n        ? `rotate(${rotation}deg)`\n        : `rotate(0deg)`,\n        transform: isBooped\n        ? `translate(${x}px, ${y}px)\n           rotate(${rotation}deg)\n           scale(${scale})`\n        : `translate(0px, 0px)\n           rotate(0deg)\n           scale(1)`,\n        config: {\n            tension: 300,\n            friction: 10,\n        },\n    });\n\n    React.useEffect(() => {\n        if (!isBooped) {\n            return;\n          }\n\n        const timeoutId = window.setTimeout(() => {\n            setIsBooped(false);\n        }, timing);\n                \n        return () => {\n            window.clearTimeout(timeoutId);\n        };\n    }, [isBooped, timing]);\n\n    const trigger = () => {\n        setIsBooped(true);\n    };\n\n    return (\n        <animated.span onMouseEnter={trigger} style={style}>\n        {children}\n        </animated.span>\n    );\n}\n\nexport default useBoop;\n"]},"metadata":{},"sourceType":"module"}