{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/WebCV/cv/src/component/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./Contact.css\";\nimport { useForm } from 'react-hook-form';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Contact = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm(); // Function that displays a success toast on bottom right of the page when form submission is successful\n\n  const toastifySuccess = () => {\n    toast('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n      toastId: 'notifyToast'\n    });\n  }; // Function called on submit that uses emailjs to send email of valid contact form\n\n\n  const onSubmit = async data => {\n    // Destrcture data object\n    const {\n      name,\n      email,\n      subject,\n      message\n    } = data;\n\n    try {\n      const templateParams = {\n        name,\n        email,\n        subject,\n        message\n      };\n      console.log(process.env.REACT_APP_SERVICE_ID);\n      await emailjs.send(process.env.REACT_APP_SERVICE_ID, process.env.REACT_APP_TEMPLATE_ID, templateParams, process.env.REACT_APP_USER_ID);\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"contact\",\n    className: \"comp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContactForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              ...register('name', {\n                required: {\n                  value: true,\n                  message: 'Please enter your name'\n                },\n                maxLength: {\n                  value: 30,\n                  message: 'Please use 30 characters or less'\n                }\n              }),\n              className: \"form-control formInput\",\n              placeholder: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: errors.name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              ...register('email', {\n                required: true,\n                pattern: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n              }),\n              className: \"form-control formInput\",\n              placeholder: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: \"Please enter a valid email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"subject\",\n              ...register('subject', {\n                required: {\n                  value: true,\n                  message: 'Please enter a subject'\n                },\n                maxLength: {\n                  value: 75,\n                  message: 'Subject cannot exceed 75 characters'\n                }\n              }),\n              className: \"form-control formInput\",\n              placeholder: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: errors.subject.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: 3,\n              name: \"message\",\n              ...register('message', {\n                required: true\n              }),\n              className: \"form-control formInput\",\n              placeholder: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), errors.message && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: \"Please enter a message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contactForm\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                id: \"contact-form\",\n                onSubmit: handleSubmit(onSubmit),\n                noValidate: true,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row formRow\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"name\",\n                      ...register('name', {\n                        required: {\n                          value: true,\n                          message: 'Please enter your name'\n                        },\n                        maxLength: {\n                          value: 30,\n                          message: 'Please use 30 characters or less'\n                        }\n                      }),\n                      className: \"form-control formInput\",\n                      placeholder: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 21\n                    }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"errorMessage\",\n                      children: errors.name.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"email\",\n                      name: \"email\",\n                      ...register('email', {\n                        required: true,\n                        pattern: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                      }),\n                      className: \"form-control formInput\",\n                      placeholder: \"Email address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 21\n                    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"errorMessage\",\n                      children: \"Please enter a valid email address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row formRow\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      name: \"subject\",\n                      ...register('subject', {\n                        required: {\n                          value: true,\n                          message: 'Please enter a subject'\n                        },\n                        maxLength: {\n                          value: 75,\n                          message: 'Subject cannot exceed 75 characters'\n                        }\n                      }),\n                      className: \"form-control formInput\",\n                      placeholder: \"Subject\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 21\n                    }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"errorMessage\",\n                      children: errors.subject.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row formRow\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col\",\n                    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                      rows: 3,\n                      name: \"message\",\n                      ...register('message', {\n                        required: true\n                      }),\n                      className: \"form-control formInput\",\n                      placeholder: \"Message\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 21\n                    }, this), errors.message && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"errorMessage\",\n                      children: \"Please enter a message\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 40\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"submit-btn\",\n                  type: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact, \"F372SiVXYlwlPcTvXEYo94zLupw=\", false, function () {\n  return [useForm];\n});\n\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/daniel/Desktop/WebCV/cv/src/component/Contact.js"],"names":["React","useForm","emailjs","ToastContainer","toast","Contact","register","handleSubmit","reset","formState","errors","toastifySuccess","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","toastId","onSubmit","data","name","email","subject","message","templateParams","console","log","process","env","REACT_APP_SERVICE_ID","send","REACT_APP_TEMPLATE_ID","REACT_APP_USER_ID","e","required","value","maxLength","pattern"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFT,OAAO,EALX,CAD2B,CAQ3B;;AACA,QAAMU,eAAe,GAAG,MAAM;AAC5BP,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBQ,MAAAA,QAAQ,EAAE,cADQ;AAElBC,MAAAA,SAAS,EAAE,IAFO;AAGlBC,MAAAA,eAAe,EAAE,IAHC;AAIlBC,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,YAAY,EAAE,IALI;AAMlBC,MAAAA,SAAS,EAAE,KANO;AAOlBC,MAAAA,SAAS,EAAE,yBAPO;AAQlBC,MAAAA,OAAO,EAAE;AARS,KAAf,CAAL;AAUD,GAXD,CAT2B,CAsB3B;;;AACA,QAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/B;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,OAAf;AAAwBC,MAAAA;AAAxB,QAAoCJ,IAA1C;;AACA,QAAI;AACF,YAAMK,cAAc,GAAG;AACrBJ,QAAAA,IADqB;AAErBC,QAAAA,KAFqB;AAGrBC,QAAAA,OAHqB;AAIrBC,QAAAA;AAJqB,OAAvB;AAOAE,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,oBAAxB;AAEA,YAAM7B,OAAO,CAAC8B,IAAR,CACJH,OAAO,CAACC,GAAR,CAAYC,oBADR,EAEJF,OAAO,CAACC,GAAR,CAAYG,qBAFR,EAGJP,cAHI,EAIJG,OAAO,CAACC,GAAR,CAAYI,iBAJR,CAAN;AAOA1B,MAAAA,KAAK;AACLG,MAAAA,eAAe;AAChB,KAnBD,CAmBE,OAAOwB,CAAP,EAAU;AACVR,MAAAA,OAAO,CAACC,GAAR,CAAYO,CAAZ;AACD;AACF,GAzBD;;AA2BA,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,SAAS,EAAC,MAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAA,+BACM;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AACM,cAAA,IAAI,EAAC,MADX;AAEM,cAAA,IAAI,EAAC,MAFX;AAAA,iBAGU7B,QAAQ,CAAC,MAAD,EAAS;AACnB8B,gBAAAA,QAAQ,EAAE;AAAEC,kBAAAA,KAAK,EAAE,IAAT;AAAeZ,kBAAAA,OAAO,EAAE;AAAxB,iBADS;AAEnBa,gBAAAA,SAAS,EAAE;AACTD,kBAAAA,KAAK,EAAE,EADE;AAETZ,kBAAAA,OAAO,EAAE;AAFA;AAFQ,eAAT,CAHlB;AAUM,cAAA,SAAS,EAAC,wBAVhB;AAWM,cAAA,WAAW,EAAC;AAXlB;AAAA;AAAA;AAAA;AAAA,oBADF,EAcOf,MAAM,CAACY,IAAP,iBAAe;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA,wBAAgCZ,MAAM,CAACY,IAAP,CAAYG;AAA5C;AAAA;AAAA;AAAA;AAAA,oBAdtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAkBE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AACM,cAAA,IAAI,EAAC,OADX;AAEM,cAAA,IAAI,EAAC,OAFX;AAAA,iBAGUnB,QAAQ,CAAC,OAAD,EAAU;AACpB8B,gBAAAA,QAAQ,EAAE,IADU;AAEpBG,gBAAAA,OAAO,EAAE;AAFW,eAAV,CAHlB;AAOM,cAAA,SAAS,EAAC,wBAPhB;AAQM,cAAA,WAAW,EAAC;AARlB;AAAA;AAAA;AAAA;AAAA,oBADF,EAWO7B,MAAM,CAACa,KAAP,iBACC;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAkCE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AACI,cAAA,IAAI,EAAC,MADT;AAEI,cAAA,IAAI,EAAC,SAFT;AAAA,iBAGQjB,QAAQ,CAAC,SAAD,EAAY;AACtB8B,gBAAAA,QAAQ,EAAE;AAAEC,kBAAAA,KAAK,EAAE,IAAT;AAAeZ,kBAAAA,OAAO,EAAE;AAAxB,iBADY;AAEtBa,gBAAAA,SAAS,EAAE;AACTD,kBAAAA,KAAK,EAAE,EADE;AAETZ,kBAAAA,OAAO,EAAE;AAFA;AAFW,eAAZ,CAHhB;AAUI,cAAA,SAAS,EAAC,wBAVd;AAWI,cAAA,WAAW,EAAC;AAXhB;AAAA;AAAA;AAAA;AAAA,oBADF,EAcKf,MAAM,CAACc,OAAP,iBACC;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA,wBAAgCd,MAAM,CAACc,OAAP,CAAeC;AAA/C;AAAA;AAAA;AAAA;AAAA,oBAfN;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlCF,eAqDE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AACM,cAAA,IAAI,EAAE,CADZ;AAEM,cAAA,IAAI,EAAC,SAFX;AAAA,iBAGUnB,QAAQ,CAAC,SAAD,EAAY;AACtB8B,gBAAAA,QAAQ,EAAE;AADY,eAAZ,CAHlB;AAMM,cAAA,SAAS,EAAC,wBANhB;AAOM,cAAA,WAAW,EAAC;AAPlB;AAAA;AAAA;AAAA;AAAA,oBADF,EAUO1B,MAAM,CAACe,OAAP,iBAAkB;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBArDF,eAkEE;AAAQ,YAAA,SAAS,EAAC,YAAlB;AAA+B,YAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,cADF,eAyEA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCACE;AAAM,gBAAA,EAAE,EAAC,cAAT;AAAwB,gBAAA,QAAQ,EAAElB,YAAY,CAACa,QAAD,CAA9C;AAA0D,gBAAA,UAAU,MAApE;AAAA,wCAEE;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,0CACE;AAAK,oBAAA,SAAS,EAAC,OAAf;AAAA,4CACE;AACE,sBAAA,IAAI,EAAC,MADP;AAEE,sBAAA,IAAI,EAAC,MAFP;AAAA,yBAGMd,QAAQ,CAAC,MAAD,EAAS;AACnB8B,wBAAAA,QAAQ,EAAE;AAAEC,0BAAAA,KAAK,EAAE,IAAT;AAAeZ,0BAAAA,OAAO,EAAE;AAAxB,yBADS;AAEnBa,wBAAAA,SAAS,EAAE;AACTD,0BAAAA,KAAK,EAAE,EADE;AAETZ,0BAAAA,OAAO,EAAE;AAFA;AAFQ,uBAAT,CAHd;AAUE,sBAAA,SAAS,EAAC,wBAVZ;AAWE,sBAAA,WAAW,EAAC;AAXd;AAAA;AAAA;AAAA;AAAA,4BADF,EAcGf,MAAM,CAACY,IAAP,iBAAe;AAAM,sBAAA,SAAS,EAAC,cAAhB;AAAA,gCAAgCZ,MAAM,CAACY,IAAP,CAAYG;AAA5C;AAAA;AAAA;AAAA;AAAA,4BAdlB;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAiBE;AAAK,oBAAA,SAAS,EAAC,OAAf;AAAA,4CACE;AACE,sBAAA,IAAI,EAAC,OADP;AAEE,sBAAA,IAAI,EAAC,OAFP;AAAA,yBAGMnB,QAAQ,CAAC,OAAD,EAAU;AACpB8B,wBAAAA,QAAQ,EAAE,IADU;AAEpBG,wBAAAA,OAAO,EAAE;AAFW,uBAAV,CAHd;AAOE,sBAAA,SAAS,EAAC,wBAPZ;AAQE,sBAAA,WAAW,EAAC;AARd;AAAA;AAAA;AAAA;AAAA,4BADF,EAWG7B,MAAM,CAACa,KAAP,iBACC;AAAM,sBAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAoCE;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,yCACE;AAAK,oBAAA,SAAS,EAAC,KAAf;AAAA,4CACE;AACE,sBAAA,IAAI,EAAC,MADP;AAEE,sBAAA,IAAI,EAAC,SAFP;AAAA,yBAGMjB,QAAQ,CAAC,SAAD,EAAY;AACtB8B,wBAAAA,QAAQ,EAAE;AAAEC,0BAAAA,KAAK,EAAE,IAAT;AAAeZ,0BAAAA,OAAO,EAAE;AAAxB,yBADY;AAEtBa,wBAAAA,SAAS,EAAE;AACTD,0BAAAA,KAAK,EAAE,EADE;AAETZ,0BAAAA,OAAO,EAAE;AAFA;AAFW,uBAAZ,CAHd;AAUE,sBAAA,SAAS,EAAC,wBAVZ;AAWE,sBAAA,WAAW,EAAC;AAXd;AAAA;AAAA;AAAA;AAAA,4BADF,EAcGf,MAAM,CAACc,OAAP,iBACC;AAAM,sBAAA,SAAS,EAAC,cAAhB;AAAA,gCAAgCd,MAAM,CAACc,OAAP,CAAeC;AAA/C;AAAA;AAAA;AAAA;AAAA,4BAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBApCF,eAyDE;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,yCACE;AAAK,oBAAA,SAAS,EAAC,KAAf;AAAA,4CACE;AACE,sBAAA,IAAI,EAAE,CADR;AAEE,sBAAA,IAAI,EAAC,SAFP;AAAA,yBAGMnB,QAAQ,CAAC,SAAD,EAAY;AACtB8B,wBAAAA,QAAQ,EAAE;AADY,uBAAZ,CAHd;AAME,sBAAA,SAAS,EAAC,wBANZ;AAOE,sBAAA,WAAW,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,4BADF,EAUG1B,MAAM,CAACe,OAAP,iBAAkB;AAAM,sBAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAzDF,eAuEE;AAAQ,kBAAA,SAAS,EAAC,YAAlB;AAA+B,kBAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAvEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eA8EE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,oBA9EF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzEA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsKD,CAxNM;;GAAMpB,O;UAMPJ,O;;;KANOI,O","sourcesContent":["import React from 'react'\nimport \"./Contact.css\"\nimport { useForm } from 'react-hook-form';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\n\nexport const Contact = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm();\n  \n  // Function that displays a success toast on bottom right of the page when form submission is successful\n  const toastifySuccess = () => {\n    toast('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n      toastId: 'notifyToast'\n    });\n  };\n  \n  // Function called on submit that uses emailjs to send email of valid contact form\n  const onSubmit = async (data) => {\n    // Destrcture data object\n    const { name, email, subject, message } = data;\n    try {\n      const templateParams = {\n        name,\n        email,\n        subject,\n        message\n      };\n\n      console.log(process.env.REACT_APP_SERVICE_ID)\n\n      await emailjs.send(\n        process.env.REACT_APP_SERVICE_ID,\n        process.env.REACT_APP_TEMPLATE_ID,\n        templateParams,\n        process.env.REACT_APP_USER_ID\n      );\n\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div id=\"contact\" className='comp'>\n      <h1>\n        Contact \n      </h1>\n\n      <div className='ContactForm'>\n        <div>\n              <form>\n                <div className='row-input'>\n                  <input\n                        type='text'\n                        name='name'\n                        {...register('name', {\n                          required: { value: true, message: 'Please enter your name' },\n                          maxLength: {\n                            value: 30,\n                            message: 'Please use 30 characters or less'\n                          }\n                        })}\n                        className='form-control formInput'\n                        placeholder='Name'\n                      ></input>\n                      {errors.name && <span className='errorMessage'>{errors.name.message}</span>}\n                </div>\n\n                <div className='row-input'>\n                  <input\n                        type='email'\n                        name='email'\n                        {...register('email', {\n                          required: true,\n                          pattern: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                        })}\n                        className='form-control formInput'\n                        placeholder='Email address'\n                      ></input>\n                      {errors.email && (\n                        <span className='errorMessage'>Please enter a valid email address</span>\n                      )}\n                </div>\n\n                <div className='row-input'>\n                  <input\n                      type='text'\n                      name='subject'\n                      {...register('subject', {\n                        required: { value: true, message: 'Please enter a subject' },\n                        maxLength: {\n                          value: 75,\n                          message: 'Subject cannot exceed 75 characters'\n                        }\n                      })}\n                      className='form-control formInput'\n                      placeholder='Subject'\n                    ></input>\n                    {errors.subject && (\n                      <span className='errorMessage'>{errors.subject.message}</span>\n                    )}\n                </div>\n\n                <div className='row-input'>\n                  <textarea\n                        rows={3}\n                        name='message'\n                        {...register('message', {\n                          required: true\n                        })}\n                        className='form-control formInput'\n                        placeholder='Message'\n                      ></textarea>\n                      {errors.message && <span className='errorMessage'>Please enter a message</span>}\n                </div>\n\n                <button className='submit-btn' type='submit'>\n                  Submit\n                </button>\n              </form>\n        </div>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-12 text-center'>\n            <div className='contactForm'>\n              <form id='contact-form' onSubmit={handleSubmit(onSubmit)} noValidate>\n                {/* Row 1 of form */}\n                <div className='row formRow'>\n                  <div className='col-6'>\n                    <input\n                      type='text'\n                      name='name'\n                      {...register('name', {\n                        required: { value: true, message: 'Please enter your name' },\n                        maxLength: {\n                          value: 30,\n                          message: 'Please use 30 characters or less'\n                        }\n                      })}\n                      className='form-control formInput'\n                      placeholder='Name'\n                    ></input>\n                    {errors.name && <span className='errorMessage'>{errors.name.message}</span>}\n                  </div>\n                  <div className='col-6'>\n                    <input\n                      type='email'\n                      name='email'\n                      {...register('email', {\n                        required: true,\n                        pattern: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                      })}\n                      className='form-control formInput'\n                      placeholder='Email address'\n                    ></input>\n                    {errors.email && (\n                      <span className='errorMessage'>Please enter a valid email address</span>\n                    )}\n                  </div>\n                </div>\n                {/* Row 2 of form */}\n                <div className='row formRow'>\n                  <div className='col'>\n                    <input\n                      type='text'\n                      name='subject'\n                      {...register('subject', {\n                        required: { value: true, message: 'Please enter a subject' },\n                        maxLength: {\n                          value: 75,\n                          message: 'Subject cannot exceed 75 characters'\n                        }\n                      })}\n                      className='form-control formInput'\n                      placeholder='Subject'\n                    ></input>\n                    {errors.subject && (\n                      <span className='errorMessage'>{errors.subject.message}</span>\n                    )}\n                  </div>\n                </div>\n                {/* Row 3 of form */}\n                <div className='row formRow'>\n                  <div className='col'>\n                    <textarea\n                      rows={3}\n                      name='message'\n                      {...register('message', {\n                        required: true\n                      })}\n                      className='form-control formInput'\n                      placeholder='Message'\n                    ></textarea>\n                    {errors.message && <span className='errorMessage'>Please enter a message</span>}\n                  </div>\n                </div>\n                <button className='submit-btn' type='submit'>\n                  Submit\n                </button>\n              </form>\n            </div>\n            <ToastContainer />\n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}