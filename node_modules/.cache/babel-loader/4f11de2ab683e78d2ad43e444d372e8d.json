{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/WebCV/cv/src/component/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./Project.css\";\nimport ProjectItem from './Project/ProjectItem';\nimport { db } from \"../firebase/firebase\";\nimport { useEffect } from 'react';\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Projects = () => {\n  _s();\n\n  const [item, setItem] = useState([{\n    url: '123',\n    title: 'project title',\n    github: 'link github',\n    livedemo: 'link live demo',\n    description: 'description'\n  }]); //Retrieve user data from the database \n\n  useEffect(() => {\n    const fetchProjects = async () => {\n      await getDocs(collection(db, \"projects\")).then(querySnapshot => console.log(querySnapshot.metadata())); // querySnapshot.forEach((doc) => {\n      //   // doc.data() is never undefined for query doc snapshots\n      //   console.log(doc.id, \" => \", doc.data());\n      //   setItem(item => [...item, doc.data()])\n      // });\n    };\n\n    fetchProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"projects\",\n    className: \"comp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"{$projects}\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectItem, {\n      item: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Projects, \"4vuLUStVVKGS//eSSSeQjsBJK8o=\");\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/daniel/Desktop/WebCV/cv/src/component/Projects.js"],"names":["React","useState","ProjectItem","db","useEffect","collection","getDocs","Projects","item","setItem","url","title","github","livedemo","description","fetchProjects","then","querySnapshot","console","log","metadata"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAAQC,EAAR,QAAiB,sBAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAE,CAAC;AACjCS,IAAAA,GAAG,EAAE,KAD4B;AAEjCC,IAAAA,KAAK,EAAE,eAF0B;AAGjCC,IAAAA,MAAM,EAAE,aAHyB;AAIjCC,IAAAA,QAAQ,EAAE,gBAJuB;AAKjCC,IAAAA,WAAW,EAAE;AALoB,GAAD,CAAF,CAAhC,CAD4B,CAS5B;;AACAV,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMW,aAAa,GAAG,YAAY;AAChC,YAAMT,OAAO,CAACD,UAAU,CAACF,EAAD,EAAK,UAAL,CAAX,CAAP,CAAoCa,IAApC,CAAyCC,aAAa,IAAIC,OAAO,CAACC,GAAR,CAAYF,aAAa,CAACG,QAAd,EAAZ,CAA1D,CAAN,CADgC,CAEhC;AACA;AACA;AACA;AACA;AACD,KAPD;;AASAL,IAAAA,aAAa;AACd,GAXQ,EAWP,EAXO,CAAT;AAaA,sBACE;AAAK,IAAA,EAAE,EAAC,UAAR;AAAmB,IAAA,SAAS,EAAC,MAA7B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAIP;AAArB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA9BM;;GAAMD,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react'\nimport \"./Project.css\"\nimport ProjectItem from './Project/ProjectItem'\nimport {db} from \"../firebase/firebase\"\nimport { useEffect } from 'react'\nimport { collection, getDocs } from \"firebase/firestore\";\n\nexport const Projects = () => {\n  const [item, setItem] = useState( [{\n    url: '123',\n    title: 'project title',\n    github: 'link github',\n    livedemo: 'link live demo',\n    description: 'description'\n  }])\n\n  //Retrieve user data from the database \n  useEffect(() =>{\n    const fetchProjects = async () => {\n      await getDocs(collection(db, \"projects\")).then(querySnapshot => console.log(querySnapshot.metadata()));\n      // querySnapshot.forEach((doc) => {\n      //   // doc.data() is never undefined for query doc snapshots\n      //   console.log(doc.id, \" => \", doc.data());\n      //   setItem(item => [...item, doc.data()])\n      // });\n    }\n\n    fetchProjects();\n  },[])\n\n  return (\n    <div id=\"projects\" className='comp'>\n      <h1>&#123;$projects&#125;</h1>\n\n      <ProjectItem item = {item}/>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}